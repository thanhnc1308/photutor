version: "3.3"

networks:
  ncttemplate:
    driver: bridge

services:
  ncttemplate_db:
    image: postgres
    container_name: ncttemplate_db1
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data/
    networks:
      - ncttemplate
  ncttemplate_redis:
    image: redis
    container_name: redis_container
    command: redis-server --requirepass ${CACHE_REDIS_PASSWORD}
#    environment:
#      - REDIS_PASSWORD=${CACHE_REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_VOLUME}:/data
#      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - ncttemplate
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
  ncttemplate_api:
    container_name: ncttemplate_api1
    build:
      context: ${PWD}
      dockerfile: Dockerfile
    environment:
      FLASK_APP: ${FLASK_APP}
      FLASK_ENV: ${FLASK_ENV}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME_LINKS}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      SECRET_KEY: ${SECRET_KEY}
    command: flask run --host 0.0.0.0 --port 5001
    volumes:
      - ${PWD}:/opt/code
    ports:
      - "5000:5000"
    links:
      - ${POSTGRES_HOSTNAME_LINKS}
    networks:
      - ncttemplate
volumes:
  pgdata:
  redisdata:
